{
    "openapi": "3.0.0",
    "info": {
        "title": "API DiceGame",
        "description": "URI's List for DiceGameApi",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000"
        }
    ],
    "paths": {
        "/api/v1/players/{id}/play": {
            "post": {
                "tags": [
                    "Player"
                ],
                "summary": "Play a game",
                "description": "Play method",
                "operationId": "play",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the player",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Game stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Game stored successfully"
                                        },
                                        "game": {
                                            "$ref": "#/components/schemas/PlayGame"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/players/list": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "List all players with success rates",
                "description": "List all players with their success rates.",
                "operationId": "listPlayers",
                "responses": {
                    "200": {
                        "description": "Players list with success rates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlayerListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/players/ranking": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get ranking of players by success rate",
                "operationId": "ranking",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Average success rate of all players: 70%"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/players/ranking/winner": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get winner(s) with highest success rate",
                "operationId": "rankingWinner",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Player with highest success score is:"
                                        },
                                        "Winner(s)": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/players/ranking/loser": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get loser(s) with lowest success rate",
                "operationId": "rankingLoser",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Player with lowest success score is:"
                                        },
                                        "Loser(s)": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/players/{id}/games": {
            "get": {
                "tags": [
                    "Player"
                ],
                "summary": "Get games history of a player",
                "operationId": "gamesHistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the player",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Player John Doe games history:"
                                        },
                                        "games_played": {
                                            "type": "integer",
                                            "example": "5"
                                        },
                                        "success_rate": {
                                            "type": "string",
                                            "example": "75.00 %"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Game"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/players/{id}/games-history": {
            "delete": {
                "tags": [
                    "Player"
                ],
                "summary": "Delete game history for a specific player",
                "description": "Delete game history for a specific player.",
                "operationId": "deleteHistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the player",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game history deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game history deleted for user: John Doe"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/players": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new player",
                "description": "Register API (POST)",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/players/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login with existing credentials",
                "description": "Login API (POST)",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login Successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid login details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid login details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/players/{id}": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update player's name",
                "description": "Profile update API(PUT)",
                "operationId": "nameChange",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the player to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile successfully updated"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserNameChange"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/players/{id}/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Logout API(POST)",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the player to logout",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User is now logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is now logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PlayGame": {
                "required": [
                    "user_id",
                    "dice1_value",
                    "dice2_value",
                    "sum",
                    "result"
                ],
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "dice1_value": {
                        "type": "integer"
                    },
                    "dice2_value": {
                        "type": "integer"
                    },
                    "sum": {
                        "type": "integer"
                    },
                    "result": {
                        "type": "string",
                        "enum": [
                            "won",
                            "lost"
                        ]
                    }
                },
                "type": "object"
            },
            "PlayerListResponse": {
                "required": [
                    "status",
                    "message",
                    "data"
                ],
                "properties": {
                    "status": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "type": "object"
            },
            "Game": {
                "title": "Game",
                "description": "Game schema",
                "required": [
                    "user_id",
                    "dice1_value",
                    "dice2_value",
                    "sum",
                    "result"
                ],
                "properties": {
                    "user_id": {
                        "description": "ID of the user associated with the game",
                        "type": "integer"
                    },
                    "dice1_value": {
                        "description": "Value of the first dice rolled in the game",
                        "type": "integer"
                    },
                    "dice2_value": {
                        "description": "Value of the second dice rolled in the game",
                        "type": "integer"
                    },
                    "sum": {
                        "description": "Sum of the values of the two dice",
                        "type": "integer"
                    },
                    "result": {
                        "description": "Result of the game",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserRegistrationRequest": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "UserLoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "UserNameChange": {
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "type": "object"
            },
            "UserLogoutRequest": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    }
}